<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://connectwise.com" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://connectwise.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ConnectWise Member API</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://connectwise.com">
      <s:element name="IsValidMemberIdAndPassword">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="credentials" type="tns:ApiCredentials" />
            <s:element minOccurs="0" maxOccurs="1" name="memberId" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="password" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ApiCredentials">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="CompanyId" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ContactId" nillable="true" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="IntegratorLoginId" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="IntegratorPassword" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="PortalConfigId" nillable="true" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="MachineId" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="IsValidMemberIdAndPasswordResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="IsValidMemberIdAndPasswordResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CreateAuthenticatedMemberHashToken">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="credentials" type="tns:ApiCredentials" />
            <s:element minOccurs="0" maxOccurs="1" name="companyId" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="memberId" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CreateAuthenticatedMemberHashTokenResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CreateAuthenticatedMemberHashTokenResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMemberIdByRemoteSupportPackageAuthenticationCredentials">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="credentials" type="tns:ApiCredentials" />
            <s:element minOccurs="1" maxOccurs="1" name="remoteSupportPackage" type="tns:RemoteSupportPackage" />
            <s:element minOccurs="0" maxOccurs="1" name="username" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="password" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:simpleType name="RemoteSupportPackage">
        <s:restriction base="s:string">
          <s:enumeration value="Unknown" />
          <s:enumeration value="LogMeIn" />
          <s:enumeration value="NtrSupport" />
        </s:restriction>
      </s:simpleType>
      <s:element name="GetMemberIdByRemoteSupportPackageAuthenticationCredentialsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetMemberIdByRemoteSupportPackageAuthenticationCredentialsResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="credentials" type="tns:ApiCredentials" />
            <s:element minOccurs="0" maxOccurs="1" name="conditions" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="orderBy" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="limit" nillable="true" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="skip" nillable="true" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FindMembersResult" type="tns:ArrayOfMemberFindResult" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfMemberFindResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="MemberFindResult" nillable="true" type="tns:MemberFindResult" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="MemberFindResult">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="MemberID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="EmailAddress" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FirstName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="LastName" type="s:string" />
        </s:sequence>
      </s:complexType>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="IsValidMemberIdAndPasswordSoapIn">
    <wsdl:part name="parameters" element="tns:IsValidMemberIdAndPassword" />
  </wsdl:message>
  <wsdl:message name="IsValidMemberIdAndPasswordSoapOut">
    <wsdl:part name="parameters" element="tns:IsValidMemberIdAndPasswordResponse" />
  </wsdl:message>
  <wsdl:message name="CreateAuthenticatedMemberHashTokenSoapIn">
    <wsdl:part name="parameters" element="tns:CreateAuthenticatedMemberHashToken" />
  </wsdl:message>
  <wsdl:message name="CreateAuthenticatedMemberHashTokenSoapOut">
    <wsdl:part name="parameters" element="tns:CreateAuthenticatedMemberHashTokenResponse" />
  </wsdl:message>
  <wsdl:message name="GetMemberIdByRemoteSupportPackageAuthenticationCredentialsSoapIn">
    <wsdl:part name="parameters" element="tns:GetMemberIdByRemoteSupportPackageAuthenticationCredentials" />
  </wsdl:message>
  <wsdl:message name="GetMemberIdByRemoteSupportPackageAuthenticationCredentialsSoapOut">
    <wsdl:part name="parameters" element="tns:GetMemberIdByRemoteSupportPackageAuthenticationCredentialsResponse" />
  </wsdl:message>
  <wsdl:message name="FindMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindMembers" />
  </wsdl:message>
  <wsdl:message name="FindMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindMembersResponse" />
  </wsdl:message>
  <wsdl:portType name="MemberApiSoap">
    <wsdl:operation name="IsValidMemberIdAndPassword">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Determines if a given ConnectWise member id and password are valid.</wsdl:documentation>
      <wsdl:input message="tns:IsValidMemberIdAndPasswordSoapIn" />
      <wsdl:output message="tns:IsValidMemberIdAndPasswordSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CreateAuthenticatedMemberHashToken">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Creates anauthenticated member hash for a given ConnectWise member.</wsdl:documentation>
      <wsdl:input message="tns:CreateAuthenticatedMemberHashTokenSoapIn" />
      <wsdl:output message="tns:CreateAuthenticatedMemberHashTokenSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetMemberIdByRemoteSupportPackageAuthenticationCredentials">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Looks up a ConnectWise member id based on a set of remote support package credentials assigned to the member in ConenctWise.</wsdl:documentation>
      <wsdl:input message="tns:GetMemberIdByRemoteSupportPackageAuthenticationCredentialsSoapIn" />
      <wsdl:output message="tns:GetMemberIdByRemoteSupportPackageAuthenticationCredentialsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Finds ConnectWise members based on a set of conditions.</wsdl:documentation>
      <wsdl:input message="tns:FindMembersSoapIn" />
      <wsdl:output message="tns:FindMembersSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MemberApiSoap" type="tns:MemberApiSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="IsValidMemberIdAndPassword">
      <soap:operation soapAction="http://connectwise.com/IsValidMemberIdAndPassword" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAuthenticatedMemberHashToken">
      <soap:operation soapAction="http://connectwise.com/CreateAuthenticatedMemberHashToken" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMemberIdByRemoteSupportPackageAuthenticationCredentials">
      <soap:operation soapAction="http://connectwise.com/GetMemberIdByRemoteSupportPackageAuthenticationCredentials" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindMembers">
      <soap:operation soapAction="http://connectwise.com/FindMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MemberApiSoap12" type="tns:MemberApiSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="IsValidMemberIdAndPassword">
      <soap12:operation soapAction="http://connectwise.com/IsValidMemberIdAndPassword" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateAuthenticatedMemberHashToken">
      <soap12:operation soapAction="http://connectwise.com/CreateAuthenticatedMemberHashToken" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMemberIdByRemoteSupportPackageAuthenticationCredentials">
      <soap12:operation soapAction="http://connectwise.com/GetMemberIdByRemoteSupportPackageAuthenticationCredentials" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindMembers">
      <soap12:operation soapAction="http://connectwise.com/FindMembers" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MemberApi">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">ConnectWise Member API</wsdl:documentation>
    <wsdl:port name="MemberApiSoap" binding="tns:MemberApiSoap">
      <soap:address location="https://connectwise.somethingdigital.com/v4_6_release/apis/1.5/MemberApi.asmx" />
    </wsdl:port>
    <wsdl:port name="MemberApiSoap12" binding="tns:MemberApiSoap12">
      <soap12:address location="https://connectwise.somethingdigital.com/v4_6_release/apis/1.5/MemberApi.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>